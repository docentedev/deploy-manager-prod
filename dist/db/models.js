/* claudio.dcv@gmail.com */
"use strict";var e=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeployLog=exports.DeployConfig=exports.User=void 0;const a=require("sequelize"),t=e(require("bcrypt")),l=e(require("./")),s=l.default.define("User",{username:{type:a.DataTypes.STRING,allowNull:!1,unique:!0},email:{type:a.DataTypes.STRING,allowNull:!1,unique:!0,validate:{isEmail:!0}},password:{type:a.DataTypes.STRING,allowNull:!1},role:{type:a.DataTypes.ENUM("user","developer","admin"),allowNull:!1,defaultValue:"user"},createdAt:{type:a.DataTypes.DATE,defaultValue:a.DataTypes.NOW},updatedAt:{type:a.DataTypes.DATE,defaultValue:a.DataTypes.NOW},active:{type:a.DataTypes.BOOLEAN,allowNull:!1,defaultValue:!0},lastLogin:{type:a.DataTypes.DATE,allowNull:!0}},{hooks:{beforeCreate:async e=>{const a=await t.default.genSalt(10);e.password=await t.default.hash(e.password,a)},beforeUpdate:async e=>{if(e.changed("password")){const a=await t.default.genSalt(10);e.password=await t.default.hash(e.password,a)}}}});exports.User=s;const o=l.default.define("DeployConfig",{userId:{type:a.DataTypes.INTEGER,references:{model:s,key:"id"},allowNull:!1},key:{type:a.DataTypes.STRING,allowNull:!1},name:{type:a.DataTypes.STRING,allowNull:!1},baseDir:{type:a.DataTypes.STRING,allowNull:!1},script:{type:a.DataTypes.TEXT,allowNull:!1},createdAt:{type:a.DataTypes.DATE,defaultValue:a.DataTypes.NOW},updatedAt:{type:a.DataTypes.DATE,defaultValue:a.DataTypes.NOW}},{hooks:{beforeCreate:e=>{e.createdAt=new Date,e.updatedAt=new Date}},timestamps:!0,updatedAt:"updatedAt",createdAt:"createdAt"});exports.DeployConfig=o;class p extends a.Model{}exports.DeployLog=p,p.init({userId:{type:a.DataTypes.INTEGER,references:{model:s,key:"id"},allowNull:!1},deployConfigId:{type:a.DataTypes.INTEGER,references:{model:o,key:"id"},allowNull:!1},timestamp:{type:a.DataTypes.DATE,defaultValue:a.DataTypes.NOW},status:{type:a.DataTypes.ENUM("success","failure"),allowNull:!1},output:{type:a.DataTypes.TEXT,allowNull:!0}},{sequelize:l.default,modelName:"DeployLog",timestamps:!0}),o.hasMany(p,{foreignKey:"deployConfigId"}),p.belongsTo(o,{foreignKey:"deployConfigId"}),s.hasMany(p,{foreignKey:"userId"}),p.belongsTo(s,{foreignKey:"userId"}),s.hasMany(o,{foreignKey:"userId"}),o.belongsTo(s,{foreignKey:"userId"});